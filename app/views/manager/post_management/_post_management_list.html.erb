<div class="post_management_list">
  <div class="header" style="display: flex; justify-content: space-between;">
    <div class="header_title">
      <h3>Post Management: </h3>
    </div>
    <div class="header_search">
      <button class="ui icon button" onclick="addPost()">
        <i class="plus icon"></i>
      </button>
      <div class="ui icon input">
        <input type="text" placeholder="Search...">
        <i class="icon">
          <img src="/assets/search.png" style="width: 1rem; height: 1rem; width: 1rem; top: 50%; position: absolute; transform: translateY(-50%);right: 0.7rem;">
        </i> 
      </div>
    </div>
  </div>
  <div class="footer_line" style="height: 1px; background-color: rgba(34,36,38,.15); margin-top: 0.5rem; margin-bottom: 1.5rem"></div>
  <table class="ui very basic selectable table">
    <thead>
      <tr>
        <th>STT</th>
        <th>Tieu de</th>
        <th>Noi dung</th>
        <th>Thoi gian</th>
        <th>Nguoi dang</th>
        <th>Trang thai</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody id="post_list">
      <% @posts.each_with_index do |post, index|%>  
        <tr>
            <td onclick="showPost(<%= post.id %>)"><%= index + 1 %></td>
            <td style="max-width: 25rem" onclick="showPost(<%= post.id %>)">
              <span style="margin: 0 auto; word-wrap: break-word; max-width: 10rem; overflow: hidden; -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box">
                <%= post.title %>
              </span>
            </td onclick="showPost(<%= post.id %>)">
            <td style="max-width: 25rem"onclick="showPost(<%= post.id %>)">
              <span style="margin: 0 auto; word-wrap: break-word; max-width: 20rem; overflow: hidden; -webkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box">
                <%= post.content.html_safe %>
              </span>
            </td>
            <td onclick="showPost(<%= post.id %>)"><%= post.created_at %></td>
            <td onclick="showPost(<%= post.id %>)"><%= post.writer_name %></td>
            <td onclick="showPost(<%= post.id %>)" id="post_status_<%= post.id%>"><%= post.status%></td>
            <td id="post_actions_<%= post.id%>">
              <% if post.status == "POSTED" %>
                <i class="trash alternate outline icon" id="delete_post_<%= post.id %>" onclick="changePostStatus(<%= post.id %>)"></i>
              <% elsif post.status == "DELETED" %>
                <i class="window restore outline icon" id="delete_post_<%= post.id %>" onclick="changePostStatus(<%= post.id %>)"></i>
              <% end %>
            </td>
        </tr>
        <div class="ui long small modal first scrolling" id="show_modal_first_<%= post.id %>">
          <div class="scrolling content" style="padding: 3rem">
            <div class="description">
              <div class="ui header"><h2><%= post.title %></h2></div>
              <%# <div class="content" style=""><img style="width: 50%; margin: 0 auto; display: block;"/></div> %>
              <div class="content" style="margin-top: 2rem"><%= post.content.html_safe %></div>
              <% if post.images.length == 1 %>
              <div class="picture" style="width: 100%; height: 50rem; margin: 0 auto; display: flex">
                <div style="background-image: url(<%= image_path post.images[0].url %>); width: 100%; height: 100%; margin: 0 auto; background-repeat: no-repeat; background-position: top;"></div>
              </div>
              <% elsif post.images.length > 1 %>
                <div class="picture" style="width: 100%; height: 25rem; margin: 0 auto; display: flex">
                  <div style="background-image: url(<%= image_path post.images[0].url %>); width: 50%; height: 100%; margin: 0 auto; background-repeat: no-repeat; background-position: cover; "></div>
                  <div style="width: 50%; height: 100%; position: relative" >
                    <div style="background-image: url(<%= image_path post.images[1].url %>); width: 100%; height: 100%; margin: 0 auto; background-repeat: no-repeat; background-position: cover; "></div>
                    <% if post.images.length > 2 %>
                      <div style="background-color: #000000; opacity: 0.5; position: absolute; top: 0; left: 0; width: 100%; height: 100%">
                      </div>
                      <p style="color: white; top: 50%; left: 50%; transform: translate(-50%, -50%); position: absolute; font-size: 3rem; ">
                        +<%= post.images.length - 2 %>
                      </p>
                    <% end %>
                  </div>
                </div>
              <% end %>
            </div>   
          </div>
          <div class="actions">
            <button class="ui cancel button">
              Cancel
            </button>
            <div class="ui primary approve button proceed">
              Proceed
              <i class="right chevron icon"></i>
            </div>
          </div>
        </div>
        <div class="ui longer  modal second scrolling" id="show_modal_second_<%= post.id %>">
          <div class="header">
            Edit my post
          </div>
          <form id="myEditForm_<%= post.id %>" multipart="true" name="myEditForm" class="ui form segment">
            <div class="ui form" style="padding: 1rem">
              <div style="max-width: 0; max-height: 0; overflow: hidden;">
                <input autofocus="true" type="hidden" name="id" value="<%= post.id %>" />
              </div>
              <div class="field">
                <textarea name="title" rows="2" placeholder="Enter title"><%= post.title %></textarea>
              </div>
              <div class="field" onfocusout="validateContent('content_edit_field')" id="content_edit_field<%= post.id %>">
                <textarea type="file" name="content" id="editor_<%= post.id %>">
                  <%= post.content %>
                </textarea>
              </div>
              <div class="content">
                <div class="ui special cards" id="preview_image_edit_<%= post.id %>"> 
                  <div class="card" style="height: 20rem", id="preview_image_card_<%= post.id %>">
                    <input type="file" class="inputfile" id="embedpollfileinput_<%= post.id %>" onchange="generatePreviewImageEdit(this)" item_index="<%= post.id %>" style="width: 100%; height: 100%" multiple="true" accept="image/png, image/jpeg" name="images_edit_input" />
                    <label for="embedpollfileinput_<%= post.id %>" class="ui button" style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
                      <i class="ui plus icon"></i>
                    </label>
                  </div>
                  <% for i in 0..post.images.length - 1 do %>
                    <div class='card' style="max-height: 20rem; height: 20rem" id="image_<%= i %>">
                    <i class="ui window close outline icon" style="position: absolute; top: 0.5rem; right: 0.5rem; cursor: pointer;", onclick="removeImage(this)"></i>
                    <img style="width: 100%; height: 100%;" src='<%= post.images[i]%>' />
                    </div>
                  <% end %>
                </div>
              </div>
              <div class="actions">
                <button class="ui cancel button">
                  Cancel
                </button>
                <div class="ui primary submit button">Update</div>
              </div>
            </div>
          </form>
        </div>
      <% end %>
    </tbody>
  </table>
</div>

<div class="ui longer modal add">
  <div class="header">
    Create a new post
  </div>
  <form id="myForm" multipart="true" name="myForm" class="ui form segment" >
    <div class="ui form" style="padding: 1rem">
      <div style="max-width: 0; max-height: 0; overflow: hidden;">
        <input autofocus="true" />
      </div>
      <div class="field">
        <textarea name="title" placeholder="Enter title" rows="2"></textarea>
      </div>
      <div class="field" id="content_field" onfocusout="validateContent('content_field')">
        <textarea id="editor" name="content"></textarea>
      </div>
      <div class="field">
        <div style="width: 30.6%">
          <textarea name="writer_name" placeholder="Writer" rows="1"></textarea>
        </div>
      </div>
      <div class="content">
        <div class="ui special cards" id="preview_image"> 
          <div class="card" style="height: 20rem", id="preview_image_card">
            <input type="file" class="inputfile" id="embedpollfileinput1" onchange="generatePreviewImage(this)" style="width: 100%; height: 100%" multiple="true" accept="image/png, image/jpeg" name="images_input" />
            <label for="embedpollfileinput1" class="ui button" style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
              <i class="ui plus icon"></i>
            </label>
          </div>
        </div>
      </div>
      <div class="actions" style="float: right">
        <button class="ui cancel button" onclick="cancelCreatePost()">
          Cancel
        </button>
        <div class="ui blue submit button">Submit</div>
      </div>
    </div>
  </form>
</div>

<style>
  .ck-editor__editable_inline {
    min-height: 150px;  
  }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js" integrity="sha512-UdIMMlVx0HEynClOIFSyOrPggomfhBKJE28LKl8yR3ghkgugPnG6iLfRfHwushZl1MOPSY6TsuBDGPK2X4zYKg==" crossorigin="anonymous"></script>
<script src="https://cdn.ckeditor.com/ckeditor5/25.0.0/classic/ckeditor.js">
</script>
<script>

$(document).ready(function(){
  $("#editor").validate({
    rules: {
      content: {
        required: true
      }
    }
    });
  });

  $('.special.cards .card .image').dimmer({
    on: 'hover'
  });

  function changePostStatus(post_id) {
    var r = confirm("Press a button!");
    if (r == true) {
      $.ajax({
        type:"POST",
        url:"/manager/post-management/",
        dataType:"json",
        data: {id: post_id},
        success:function(result){
          alert(result.message);
          document.getElementById(`post_status_${post_id}`).innerHTML = result.status;
          document.getElementById(`post_actions_${post_id}`).innerHTML = `<i class='${result.status == 'POSTED' ?  'trash alternate' : 'window restore' } outline icon' onclick='changePostStatus(${post_id})'></i>`;
        }
      })
    } else {

    }
  }

  var isCreated = []
  document.addEventListener("DOMContentLoaded", function(event) { 
      ClassicEditor
        .create( document.querySelector( '#editor' ), {
          toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', 'imageInsert'],
          heading: {
            options: [
                { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }
            ]
        }
        })
        .catch( error => {
          console.error( error );
        })
    }

    
  );

  var currentEditor;
  function showPost(post_id) {
    $(`#show_modal_first_${post_id}`).modal('show');
    $(`#show_modal_second_${post_id}`)
    .modal('attach events', `#show_modal_first_${post_id} .button.proceed`);
    if (isCreated[post_id] != true) {
       ClassicEditor
        .create( document.querySelector( '#editor_' + post_id ), {
          toolbar: [ 'heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', 'imageInsert'],
          heading: {
            options: [
                { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }
            ]
        }
        })
        .then(editor => {
          currentEditor = editor;
        })
        .catch( error => {
          console.error( error );
        })
        isCreated[post_id] = true;
    }
  }

  $('.coupled.modal')
    .modal({
      allowMultiple: false
    })
  ;
  // attach events to buttons
  function addPost() {
    $('.ui.longer.modal.add').modal('show');
    $('#myForm').form('reset');
  }
  // CKEDITOR.replace('content',{ toolbar :[ ['Subscript','Superscript'] ], height: '35px', width: '100%' });
  console.log(ClassicEditor.builtinPlugins.map( plugin => plugin.pluginName ))

  function convertStringToHtml(str) { 
    return $(str);
  }

  let myEditForm = document.getElementById('myEditForm_1');
  let formDataEdit = new FormData(myEditForm);

  function generatePreviewImageEdit(image, images){
    var index = 0;
    count = image.files.length;
    image_index = image.getAttribute('item_index')
    console.log(images)
    for (let i = 0; i < image.files.length; i++) {
      $(`#preview_image_edit_${image_index}`).append(`<div class='card' style="max-height: 20rem" id="image_edit_${i}">
                                <i class="ui window close outline icon" style="position: absolute; top: 0.5rem; right: 0.5rem; cursor: pointer;", onclick="removeImage(this)"></i>
                                <img style="width: 100%; height: 100%;" src='${URL.createObjectURL(image.files[i])}' />
                                </div>`)
      console.log("abc")
    }

    index++
    console.log(formDataEdit.getAll("title"))
  }

//ADD POST


  var allImage = [] 
  let myForm = document.getElementById('myForm');
  let formData = new FormData(myForm);
  // console.log(formData.get('content'))
  function generatePreviewImage(image){
    var index = 0;
    count = image.files.length;
    // uploadFile(image.files[0])

    for (let i = 0; i < image.files.length; i++) {
      $('#preview_image').append(`<div class='card' style="max-height: 20rem" id="image_${index}">
                                <i class="ui window close outline icon" style="position: absolute; top: 0.5rem; right: 0.5rem; cursor: pointer;", onclick="removeImage(this)"></i>
                                <img style="width: 100%; height: 100%;" src='${URL.createObjectURL(image.files[i])}' />
                                </div>`)
    }
    // $('#preview_image').append(`<div class="card" style="height: 20rem", id="preview_image_card">
    //         <input type="file" class="inputfile" id="embedpollfileinput" onchange="generatePreviewImage(this)" style="width: 100%; height: 100%" multiple/>
    //         <label for="embedpollfileinput" class="ui button" style="width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">
    //           <i class="ui plus icon"></i>
    //         </label>
    //       </div>`)
    let myFormImage = document.getElementById('myForm');
    let formDataImage = new FormData(myForm);
    index++;
    for (let index = 0; index < formDataImage.getAll("images_input").length; index++) {
      formData.append('images', formDataImage.getAll("images_input")[index]);
    }
  }

  function removeImage(_this){
    const preview_images = Array.prototype.slice.call( document.getElementById('preview_image').children )
    $(_this).parent().remove();
    const index =  preview_images.indexOf( _this.parentElement )
    let images = formData.getAll("images")
    images.splice(index-1, 1)
    formData.delete('images')
    for (let index = 0; index < images.length; index++) {
      formData.append('images', images[index])
    }
  }

  function createSubmit(e){
    let formdatapost = new FormData(document.getElementById('myForm'));
    let images = formData.getAll('images');
    for (let i = 0; i < images.length; i++) {
      formdatapost.append(`images[]`, images[i])
    }
    formdatapost.delete('images_input')
    formdatapost.delete('content')
    // console.log(formdatapost.get('content'))
    x = document.querySelector('[role="textbox"]');
    var post_content = x.innerHTML
    formdatapost.append('content', post_content)
    e.preventDefault();

    $.ajax({
      type: "POST",
      url: "/manager/post-management/create",
      processData: false,
      contentType: false,
      cache: false,
      mimeType: 'multipart/form-data',
      data: formdatapost,
      success: function(result){
        // console.log(result)
        $('#myForm').form('reset');
        $('.ui.longer.modal.add').find('.error').removeClass('error');
        $('.ui.longer.modal.add').modal('hide')
        let result_html = document.createElement('tr')
        result_html.innerHTML = result
        document.querySelector('#post_list').append(result_html)
      },
      error: function (error) {
        console.log(error)
        console.log("fails")
      }
    })
  }

  function validateContent(field_id){
    $('.ui.pointing.red.basic.label.validate.content ').remove();
    x = document.querySelector('[role="textbox"]');
    var post_content = x.innerHTML
    console.log(post_content.replace(/<[^>]*>/gi, '').length)
    if (post_content.replace(/<[^>]*>/gi, '').length < 1) {
      $(`#${field_id}`).append(`<div class="ui pointing red basic label validate content " style="color: #9f3a38!important; border-color: #e0b4b4!important">
                                    Please enter content!!
                                  </div>`)
    }
  }

  $('#myForm').unbind('submit').submit(function(e){
    if($('#myForm').form('is valid')) {
      console.log('form work')
      createSubmit(e);
    }
  })

  function cancelCreatePost(){
    $('#myForm').form('reset');
    $('.ui.longer.modal.add').find('.error').removeClass('error');
    $('.ui.longer.modal.add').modal('hide')
  }

  function updateSubmit(event){
    
  }

   $('#myEditForm_1').unbind('submit').submit(function(e){
     console.log("myEditForm")
    if($('#myEditForm_1').form('is valid')) {
      updateSubmit(e);
    }
  })

  //VALIDATION

   $('#myForm')
    .form({
      fields: {
        title: {
          identifier: 'title',
          rules: [
            {
              type: 'empty',
              prompt: 'Please enter title!!'
            },
            {
              type: 'minLength[2]',
              prompt: 'Title must be more than 2 letters!'
            },
            {
              type: 'maxLength[300]',
              prompt: 'Title must be less than 300 letters!'
            }
          ]
        },
        writer_name: {
          identifier: 'writer_name',
          rules: [
            {
              type: 'empty',
              prompt: 'Please enter your name !!'
            },
            {
              type: 'minLength[1]',
              prompt: 'Content must be more than 1 letters!'
            },
            {
              type: 'maxLength[100]',
              prompt: 'Name must be less than 100 letters!'
            }
          ]
        }
      },
      inline: true,
      on: 'blur'
    })
  ;
  $('#myEditForm_1')
     .form({
      fields: {
        title: {
          identifier: 'title',
          rules: [
            {
              type: 'empty',
              prompt: 'Please enter title!!'
            },
            {
              type: 'minLength[2]',
              prompt: 'Title must be more than 2 letters!'
            },
            {
              type: 'maxLength[300]',
              prompt: 'Title must be less than 300 letters!'
            }
          ]
        }
      },
      inline: true,
      on: 'blur'
    });


</script>
<style>
.grid.container {
  margin-top: 5em;
}
.inputfile {
	width: 0.1px;
	height: 0.1px;
	opacity: 0;
	overflow: hidden;
	position: absolute;
	z-index: -1;
}
.insert_image:hover {
  background-color: #e0e1e2;
  cursor: pointer;
}
.card {
      width: 30% !important;
      float: left;
    }
</style>